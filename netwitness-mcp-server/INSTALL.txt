==============================================
NETWITNESS MCP SERVER GUIDE
==============================================

This guide outlines the steps required to build, configure, and run the NetWitness MCP Server Docker image, and how to configure a related application.

----------------------------------------------
1. BUILD THE DOCKER IMAGE
----------------------------------------------
Navigate to the server directory and build the Docker image locally.

  cd netwitness-mcp-server
  docker build -t netwitness-mcp-server .

----------------------------------------------
2. CONFIGURE ENVIRONMENT VARIABLES
----------------------------------------------
Use the following commands to set the required credentials and API URL.
Note: Change the IP and Port according to your NetWitness environment. Concentrator (50105), Broker (50104).

  docker mcp secret set NETWITNESS_API_URL="https://192.168.1.200:50105"
  docker mcp secret set NETWITNESS_USERNAME="admin"
  docker mcp secret set NETWITNESS_PASSWORD="netwitness"

----------------------------------------------
3. CONFIGURE DOCKER REGISTRY
----------------------------------------------
You must copy or append the contents of the "registry.yaml" file to your user's Docker MCP configuration file.

Destination path:
  Windows: c:\Users\[user]\.docker\mcp\registry.yaml
  Linux: ~/.docker/mcp/registry.yaml

----------------------------------------------
4. CONFIGURE DOCKER MCP CUSTOM CATALOG
----------------------------------------------
You must copy or append the contents of the "custom.yaml" file to your user's Docker MCP configuration file.

Destination path:
  Windows: c:\Users\[user]\.docker\mcp\catalogs\custom.yaml
  Linux: ~/.docker/mcp/catalogs/custom.yaml

----------------------------------------------
5. CONFIGURE CLAUDE DESKTOP
----------------------------------------------
To connect the Claude application to your running MCP Server, copy the "claude_desktop_config.json" file to the specified application data directory and then update the configuration.

1. Copy the file:
   Copy "claude_desktop_config.json" to: %APPDATA%\Claude\claude_desktop_config.json

2. Modify Home directory:
   Edit the copied configuration file and replace the placeholder Home directory 
   Windows: C:\\Users\\your_username/.docker/mcp:/mcp",
   Linux: /home/your_username/.docker/mcp:/mcp",
   Mac: /Users/your_username/.docker/mcp:/mcp",

----------------------------------------------
6. CONFIGURE GEMINI CLI
----------------------------------------------
To connect the Gemini CLI application to your running MCP Server, copy the content of the "claude_desktop_config.json" file to the Gemini CLI settings JSON file.
1. Copy the content of the file to: [Home]\.gemini\settings.json

----------------------------------------------
7. RELOAD CONFIG
----------------------------------------------
For the changes to take effect, completely close the application (Claude Desktop or Gemini CLI) and re-open it.

----------------------------------------------
8. ACCESS THE MCP SERVER REMOTELY
----------------------------------------------
1. To make the MCP Server accessible remotely, run the following commands (will become accessible over :8811).
    docker run -d \
      --restart=unless-stopped \
      --name mcp-gateway \
      -p 8811:8811 \
      -v /var/run/docker.sock:/var/run/docker.sock \
      -v $HOME/.docker/mcp:/mcp:ro \
      docker/mcp-gateway \
      --catalog=/mcp/catalogs/docker-mcp.yaml \
      --catalog=/mcp/catalogs/custom.yaml \
      --config=/mcp/config.yaml \
      --registry=/mcp/registry.yaml \
      --secrets=docker-desktop \
      --watch=true \
      --transport=streaming \
      --port=8811

2. Install Node.js:
   Node.js is a pre-requisite to be installed. If not already installed, download and install from here: https://nodejs.org/en/download

3. Use the below for the claude_desktop_config.json file (adjusting the IP accordingly)
{
  "mcpServers": {
    "netwitness": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "http://192.168.1.123:8811/mcp",
		"--allow-http"
      ]
    }
  }
}